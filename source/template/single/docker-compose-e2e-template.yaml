# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

version: '2'

services:
  ca0:
    container_name: ca_YzhOrg
    dns_search: .
    image: hyperledger/fabric-ca:${FABRIC_CA_VER}
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-YzhOrg
      - FABRIC_CA_SERVER_TLS_ENABLED=${TLS_ENABLED}
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server/ca.${PEER_DOMAIN}-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server/CA1_PRIVATE_KEY
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server/ca.${PEER_DOMAIN}-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server/CA1_PRIVATE_KEY -b admin:adminpw -d'
    volumes:
      - ${CRYPTO_LOCAL}/peerOrganizations/${PEER_DOMAIN}/ca:/etc/hyperledger/fabric-ca-server
    ports:
      - "7054:7054"

  zookeeper0:
    container_name: zookeeper0
    dns_search: .
    extends:
      file: base/docker-compose-base.yaml
      service: zookeeper
    environment:
      - ZOO_MY_ID=1
      - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
    ports:
        - '2181'
        - '2888'
        - '3888'

  zookeeper1:
    container_name: zookeeper1
    dns_search: .
    extends:
      file: base/docker-compose-base.yaml
      service: zookeeper
    environment:
      - ZOO_MY_ID=2
      - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888

  zookeeper2:
    container_name: zookeeper2
    dns_search: .
    extends:
      file: base/docker-compose-base.yaml
      service: zookeeper
    environment:
      - ZOO_MY_ID=3
      - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888

  kafka0:
    container_name: kafka0
    dns_search: .
    extends:
      file: base/docker-compose-base.yaml
      service: kafka
    environment:
        - KAFKA_BROKER_ID=0
        - KAFKA_MIN_INSYNC_REPLICAS=2
        - KAFKA_DEFAULT_REPLICATION_FACTOR=3
        - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
    depends_on:
        - zookeeper0
        - zookeeper1
        - zookeeper2

  kafka1:
    container_name: kafka1
    dns_search: .
    extends:
      file: base/docker-compose-base.yaml
      service: kafka
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_MIN_INSYNC_REPLICAS=2
      - KAFKA_DEFAULT_REPLICATION_FACTOR=3
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2

  kafka2:
    container_name: kafka2
    dns_search: .
    extends:
      file: base/docker-compose-base.yaml
      service: kafka
    environment:
      - KAFKA_BROKER_ID=2
      - KAFKA_MIN_INSYNC_REPLICAS=2
      - KAFKA_DEFAULT_REPLICATION_FACTOR=3
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2

  kafka3:
    container_name: kafka3
    dns_search: .
    extends:
      file: base/docker-compose-base.yaml
      service: kafka
    environment:
      - KAFKA_BROKER_ID=3
      - KAFKA_MIN_INSYNC_REPLICAS=2
      - KAFKA_DEFAULT_REPLICATION_FACTOR=3
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2

  orderer:
    container_name: orderer
    image: hyperledger/fabric-orderer:${FABRIC_IMAGE_VER}
    environment:
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/orderer/orderer.genesis.block
      - ORDERER_GENERAL_LOCALMSPID=${ORDERER_MSPID}
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/orderer/msp
      - ORDERER_GENERAL_TLS_ENABLED=${TLS_ENABLED}
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/orderer/tls/ca.crt]
      - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
      - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
      - ORDERER_KAFKA_VERBOSE=true
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
      - ${CH_ARTIFACTS}/genesis.block:/etc/hyperledger/orderer/orderer.genesis.block
      - ${CRYPTO_LOCAL}/ordererOrganizations/${ORDERER_DOMAIN}/orderers/orderer.${ORDERER_DOMAIN}:/etc/hyperledger/orderer
    ports:
      - 7050:7050
    depends_on:
      - kafka0
      - kafka1
      - kafka2
      - kafka3

  couchdb0:
    container_name: couchdb0
    dns_search: .
    image: hyperledger/fabric-couchdb:${FABRIC_BASE_VER}
    environment:
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=password
    ports:
      - "5984:5984"

  peer0:
    container_name: peer0
    dns_search: .
    extends:
      file: base/peer-base.yaml
      service: peer-base
    environment:
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      - CORE_CHAINCODE_LOGGING_SHIM=DEBUG
      - CORE_PEER_ID=peer0
      - CORE_PEER_ADDRESS=peer0:7051
      - CORE_PEER_CHAINCODEADDRESS=peer0:7052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0:7051
      - CORE_PEER_LOCALMSPID=${PEER_MSPID}
    volumes:
      - /var/run/:/host/var/run/
      - ${CRYPTO_LOCAL}/peerOrganizations/${PEER_DOMAIN}/peers/peer0.${PEER_DOMAIN}/msp:/etc/hyperledger/fabric/msp
      - ${CRYPTO_LOCAL}/peerOrganizations/${PEER_DOMAIN}/peers/peer0.${PEER_DOMAIN}/tls:/etc/hyperledger/fabric/tls
    ports:
      - 7051:7051
      - 7052:7052
      - 7053:7053
    depends_on:
      - couchdb0

  couchdb1:
    container_name: couchdb1
    dns_search: .
    image: hyperledger/fabric-couchdb:${FABRIC_BASE_VER}
    environment:
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=password
    ports:
      - "6984:5984"

  peer1:
    container_name: peer1
    dns_search: .
    extends:
      file: base/peer-base.yaml
      service: peer-base
    environment:
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      - CORE_CHAINCODE_LOGGING_SHIM=DEBUG
      - CORE_PEER_ID=peer1
      - CORE_PEER_ADDRESS=peer1:7051
      - CORE_PEER_CHAINCODEADDRESS=peer1:7052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1:7051
      - CORE_PEER_LOCALMSPID=${PEER_MSPID}
    volumes:
      - /var/run/:/host/var/run/
      - ${CRYPTO_LOCAL}/peerOrganizations/${PEER_DOMAIN}/peers/peer1.${PEER_DOMAIN}/msp:/etc/hyperledger/fabric/msp
      - ${CRYPTO_LOCAL}/peerOrganizations/${PEER_DOMAIN}/peers/peer1.${PEER_DOMAIN}/tls:/etc/hyperledger/fabric/tls
    ports:
      - 8051:7051
      - 8052:7052
      - 8053:7053
    depends_on:
      - couchdb1

  cli:
    container_name: cli
    dns_search: .
    image: hyperledger/fabric-tools:${FABRIC_IMAGE_VER}
    tty: true
    environment:
      - GODEBUG=netdns=go
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_ID=cli
      - CORE_PEER_ADDRESS=peer0:7051
      - CORE_PEER_LOCALMSPID=${PEER_MSPID}
      - CORE_PEER_TLS_ENABLED=${TLS_ENABLED}
      - CORE_PEER_TLS_CERT_FILE=/cli/crypto/peerOrganizations/${PEER_DOMAIN}/peers/peer0.${PEER_DOMAIN}/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/cli/crypto/peerOrganizations/${PEER_DOMAIN}/peers/peer0.${PEER_DOMAIN}/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/cli/crypto/peerOrganizations/${PEER_DOMAIN}/peers/peer0.${PEER_DOMAIN}/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=/cli/crypto/peerOrganizations/${PEER_DOMAIN}/users/Admin@${PEER_DOMAIN}/msp
      - FABRIC_PEERS_LIST=0 1
      - FABRIC_ORDERER_LIST=orderer
      - CHANNEL_NAME=${CHAINCODE_CHANNEL}
      - CHAINCODE_NAME=${CHAINCODE_NAME}
      - CHAINCODE_INIT_ARGS=${CHAINCODE_INIT_ARGS}
      - CHAINCODE_INVOKE_ARGS=${CHAINCODE_INVOKE_ARGS}
    working_dir: /cli
    command: /bin/bash -c './scripts/script.sh ${CHAINCODE_CHANNEL} ${CHAINCODE_VERSION} ${CHAINCODE_INSTALL}; sleep $TIMEOUT'
    volumes:
      - /var/run/:/host/var/run/
      - ./scripts:/cli/scripts/
      - ./channel-artifacts:/cli/channel-artifacts
      - ${CRYPTO_LOCAL}:/cli/crypto
      - ${LOCAL_GOPATH}/src/${CHAINCODE_PACKAGE_REMOTE}:/opt/gopath/src/${CHAINCODE_PACKAGE_REMOTE}
    depends_on:
      - orderer
      - peer0
      - peer1
